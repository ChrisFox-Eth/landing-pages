"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _utils = _interopRequireDefault(require("../utils"));

var _constants = require("../constants");

var _erc = require("../erc20");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Triggers a transaction to withdraw funds from the lock and assign them to the owner.
 * By default (amount=0), this withdraws all funds.
 * @param {PropTypes.address} lockAddress
 * @param {string} amount
 * @param {number} erc20Address
 * @param {number} decimals
 * @param {function} callback invoked with the transaction hash
 */
async function _default({
  erc20Address,
  lockAddress,
  amount = '0',
  decimals
}, callback) {
  const lockContract = await this.getLockContract(lockAddress);

  if (!erc20Address || erc20Address !== _constants.ZERO) {
    erc20Address = await lockContract.tokenAddress();
  } // decimals could be 0!


  if (decimals == null) {
    // get the decimals from the ERC20 contract or default to 18
    if (erc20Address !== _constants.ZERO) {
      decimals = await (0, _erc.getErc20Decimals)(erc20Address, this.provider);
    } else {
      decimals = 18;
    }
  }

  const actualAmount = _utils.default.toDecimal(amount, decimals);

  const transactionPromise = lockContract.withdraw(erc20Address, actualAmount);
  const hash = await this._handleMethodCall(transactionPromise);

  if (callback) {
    callback(null, hash, await transactionPromise);
  } // Let's now wait for the funds to have been withdrawn


  const receipt = await this.provider.waitForTransaction(hash);
  const parser = lockContract.interface;
  const withdrawalEvent = receipt.logs.map(log => {
    if (log.address !== lockAddress) return; // Some events are triggered by the ERC20 contract

    return parser.parseLog(log);
  }).filter(event => {
    return event && event.name === 'Withdrawal';
  })[0];

  if (withdrawalEvent) {
    return _utils.default.fromWei(withdrawalEvent.args.amount.toString(), 'ether');
  } // There was no Withdrawal log (transaction failed?)


  return null;
}